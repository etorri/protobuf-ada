-- Generated by the protocol buffer compiler. DO NOT EDIT!
-- source: unittest.proto

pragma Ada_2012;

with Protocol_Buffers.Message;
with Protocol_Buffers.Wire_Format;
with Protocol_Buffers.IO.Coded_Output_Stream;
with Protocol_Buffers.IO.Coded_Input_Stream;
with Protocol_Buffers.Generated_Message_Utilities;
with Ada.Streams.Stream_IO;
with Ada.Containers.Vectors;
with Ada.Unchecked_Conversion;
with Ada.Unchecked_Deallocation;

package Unittest is
  use type Protocol_Buffers.Wire_Format.PB_String;
  use type Protocol_Buffers.Wire_Format.PB_Byte;
  use type Protocol_Buffers.Wire_Format.PB_UInt32;
  use type Protocol_Buffers.Wire_Format.PB_UInt64;
  use type Protocol_Buffers.Wire_Format.PB_Double;
  use type Protocol_Buffers.Wire_Format.PB_Float;
  use type Protocol_Buffers.Wire_Format.PB_Bool;
  use type Protocol_Buffers.Wire_Format.PB_Int32;
  use type Protocol_Buffers.Wire_Format.PB_Int64;
  use type Protocol_Buffers.Wire_Format.PB_Field_Type;
  use type Protocol_Buffers.Wire_Format.PB_Wire_Type;
  use type Protocol_Buffers.Wire_Format.PB_Object_Size;
  use type Protocol_Buffers.Wire_Format.PB_String_Access;


  type ForeignEnum is (FOREIGN_FOO, FOREIGN_BAR, FOREIGN_BAZ);
  for ForeignEnum'Size use 32;
  for ForeignEnum use (FOREIGN_FOO => 4, FOREIGN_BAR => 5, FOREIGN_BAZ => 6);
  function Enumeration_To_PB_Int32 is new Ada.Unchecked_Conversion (ForeignEnum, Protocol_Buffers.Wire_Format.PB_Int32);
  function PB_Int32_To_Enumeration is new Ada.Unchecked_Conversion (Protocol_Buffers.Wire_Format.PB_Int32, ForeignEnum);


  type TestSparseEnum is (SPARSE_E, SPARSE_D, SPARSE_F, SPARSE_G, SPARSE_A, SPARSE_B, SPARSE_C);
  for TestSparseEnum'Size use 32;
  for TestSparseEnum use (SPARSE_E => -53452, SPARSE_D => -15, SPARSE_F => 0, SPARSE_G => 2, SPARSE_A => 123, SPARSE_B => 62374, SPARSE_C => 12589234);
  function Enumeration_To_PB_Int32 is new Ada.Unchecked_Conversion (TestSparseEnum, Protocol_Buffers.Wire_Format.PB_Int32);
  function PB_Int32_To_Enumeration is new Ada.Unchecked_Conversion (Protocol_Buffers.Wire_Format.PB_Int32, TestSparseEnum);

  type ImportEnum is (IMPORT_FOO, IMPORT_BAR, IMPORT_BAZ);
  for ImportEnum'Size use 32;
  for ImportEnum use (IMPORT_FOO => 7, IMPORT_BAR => 8, IMPORT_BAZ => 9);
  function Enumeration_To_PB_Int32 is new Ada.Unchecked_Conversion (ImportEnum, Protocol_Buffers.Wire_Format.PB_Int32);
  function PB_Int32_To_Enumeration is new Ada.Unchecked_Conversion (Protocol_Buffers.Wire_Format.PB_Int32, ImportEnum);

  package Enumeration is
    package TestAllTypes is

      type NestedEnum is (FOO, BAR, BAZ);
      for NestedEnum'Size use 32;
      for NestedEnum use (FOO => 1, BAR => 2, BAZ => 3);
      function Enumeration_To_PB_Int32 is new Ada.Unchecked_Conversion (NestedEnum, Protocol_Buffers.Wire_Format.PB_Int32);
      function PB_Int32_To_Enumeration is new Ada.Unchecked_Conversion (Protocol_Buffers.Wire_Format.PB_Int32, NestedEnum);

      package NestedMessage is
      end NestedMessage;
    end TestAllTypes;
    package TestDeprecatedFields is
    end TestDeprecatedFields;
    package ForeignMessage is
    end ForeignMessage;
    package TestRequired is
    end TestRequired;
    package TestRequiredForeign is
    end TestRequiredForeign;
    package TestForeignNested is
    end TestForeignNested;
    package TestReallyLargeTagNumber is
    end TestReallyLargeTagNumber;
    package TestRecursiveMessage is
    end TestRecursiveMessage;
    package TestMutualRecursionA is
    end TestMutualRecursionA;
    package TestMutualRecursionB is
    end TestMutualRecursionB;
    package TestEagerMessage is
    end TestEagerMessage;
    package TestLazyMessage is
    end TestLazyMessage;
    package TestCamelCaseFieldNames is
    end TestCamelCaseFieldNames;
    package TestFieldOrderings is
    end TestFieldOrderings;
    package TestExtremeDefaultValues is
    end TestExtremeDefaultValues;
    package SparseEnumMessage is
    end SparseEnumMessage;
    package OneString is
    end OneString;
    package MoreString is
    end MoreString;
    package OneBytes is
    end OneBytes;
    package MoreBytes is
    end MoreBytes;
    package TestPackedTypes is
    end TestPackedTypes;
    package TestUnpackedTypes is
    end TestUnpackedTypes;
    package TestRepeatedScalarDifferentTagSizes is
    end TestRepeatedScalarDifferentTagSizes;
    package TestCommentInjectionMessage is
    end TestCommentInjectionMessage;
  end Enumeration;
end Unittest;
